
.scrollgrid {

  &, table { // root AND inner tables
    width: 100%; // because tables don't normally do this
    table-layout: fixed;
  }

  table { // inner tables
    border-style: hidden; // kill outer border
  }

}

.scrollgrid__section { // a <tr>
  height: 0;

  > td {
    height: 0; // needs a height so vgrow's within grow
    padding: 0 !important;
  }
}

.scrollgrid__section.vgrow {
  height: auto; // undo 1px height. will cancel height:100% also

  > td {
    height: 100%; // FF needs this instead of auto
  }
}

// poor man's clippedscroller
// needed to make give precedence to section growing before contents within scroller
.scrollerharness.vgrow {
  position: relative;

  > .fc-scroller {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
  }
}

.clippedscroller {
  position: relative;
  overflow: hidden;
  direction: ltr; // hack for chrome doing the scroller's right/left wrong for rtl. undone below...
}

.fc-rtl .clippedscroller > .fc-scroller { // undo hack
  direction: rtl;
}


.fc-scroller {
  position: relative; // for abs-positioned elements within
}


.scrollgrid.scrollgrid--forprint { // will eventually have precedence of `.fc-print .scrollgrid`
  table-layout: auto;
}

.scrollgrid--forprint {

  .cell-content-wrap {
    height: auto !important; // override inline
  }

  .fc-sticky {
    top: 0 !important;
    right: 0 !important;
    left: 0 !important;
    bottom: 0 !important;
  }

}

// for FF, which doesn't expand a 100% div within a table cell. use absolute positioning
.fc-scrollgrid-vgrow-cell-hack {
  td, th {
    position: relative;

    > .vgrow {
      height: auto !important;
      position: absolute !important;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
}

// for most browsers, if a height isn't set on the table, can't do vgrow within cells
.scrollgrid__section table {
  height: 1px; // serves as a min-height. harmless
}
